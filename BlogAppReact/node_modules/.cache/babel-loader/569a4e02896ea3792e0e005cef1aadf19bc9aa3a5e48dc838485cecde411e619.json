{"ast":null,"code":"var _jsxFileName = \"/home/aniket/Development/Projects/Blog App using React/src/components/BlogList.js\";\n// src/components/BlogList.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogList() {\n  // This would typically fetch from an API\n  const posts = [{\n    id: 1,\n    title: 'First Blog Post',\n    categories: ['Technology'],\n    tags: ['react', 'javascript']\n  }, {\n    id: 2,\n    title: 'Second Blog Post',\n    categories: ['Lifestyle'],\n    tags: ['health', 'fitness']\n  }];\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"blog-list\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/post/${post.id}`,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-metadata\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"categories\",\n          children: post.categories.map((category, index) => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/category/${category}`,\n            className: \"category\",\n            children: category\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tags\",\n          children: post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tag/${tag}`,\n            className: \"tag\",\n            children: [\"#\", tag]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","BlogList","posts","id","title","categories","tags","className","children","map","post","to","fileName","_jsxFileName","lineNumber","columnNumber","category","index","tag","_c","$RefreshReg$"],"sources":["/home/aniket/Development/Projects/Blog App using React/src/components/BlogList.js"],"sourcesContent":["// src/components/BlogList.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction BlogList() {\n  // This would typically fetch from an API\n  const posts = [\n    { id: 1, title: 'First Blog Post', categories: ['Technology'], tags: ['react', 'javascript'] },\n    { id: 2, title: 'Second Blog Post', categories: ['Lifestyle'], tags: ['health', 'fitness'] },\n  ];\n\n  return (\n    <ul className=\"blog-list\">\n      {posts.map(post => (\n        <li key={post.id}>\n          <Link to={`/post/${post.id}`}>{post.title}</Link>\n          <div className=\"post-metadata\">\n            <span className=\"categories\">\n              {post.categories.map((category, index) => (\n                <Link key={index} to={`/category/${category}`} className=\"category\">\n                  {category}\n                </Link>\n              ))}\n            </span>\n            <span className=\"tags\">\n              {post.tags.map((tag, index) => (\n                <Link key={index} to={`/tag/${tag}`} className=\"tag\">\n                  #{tag}\n                </Link>\n              ))}\n            </span>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default BlogList;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAClB;EACA,MAAMC,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,iBAAiB;IAAEC,UAAU,EAAE,CAAC,YAAY,CAAC;IAAEC,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY;EAAE,CAAC,EAC9F;IAAEH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,kBAAkB;IAAEC,UAAU,EAAE,CAAC,WAAW,CAAC;IAAEC,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS;EAAE,CAAC,CAC7F;EAED,oBACEN,OAAA;IAAIO,SAAS,EAAC,WAAW;IAAAC,QAAA,EACtBN,KAAK,CAACO,GAAG,CAACC,IAAI,iBACbV,OAAA;MAAAQ,QAAA,gBACER,OAAA,CAACF,IAAI;QAACa,EAAE,EAAE,SAASD,IAAI,CAACP,EAAE,EAAG;QAAAK,QAAA,EAAEE,IAAI,CAACN;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDf,OAAA;QAAKO,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BR,OAAA;UAAMO,SAAS,EAAC,YAAY;UAAAC,QAAA,EACzBE,IAAI,CAACL,UAAU,CAACI,GAAG,CAAC,CAACO,QAAQ,EAAEC,KAAK,kBACnCjB,OAAA,CAACF,IAAI;YAAaa,EAAE,EAAE,aAAaK,QAAQ,EAAG;YAACT,SAAS,EAAC,UAAU;YAAAC,QAAA,EAChEQ;UAAQ,GADAC,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPf,OAAA;UAAMO,SAAS,EAAC,MAAM;UAAAC,QAAA,EACnBE,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAC,CAACS,GAAG,EAAED,KAAK,kBACxBjB,OAAA,CAACF,IAAI;YAAaa,EAAE,EAAE,QAAQO,GAAG,EAAG;YAACX,SAAS,EAAC,KAAK;YAAAC,QAAA,GAAC,GAClD,EAACU,GAAG;UAAA,GADID,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA,GAjBCL,IAAI,CAACP,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBZ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACI,EAAA,GAhCQlB,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}