{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\nexport default API_BASE_URL;\nexport const getPosts = async () => {\n  const response = await fetch('http://your-api-url/posts');\n  if (!response.ok) {\n    throw new Error('Failed to fetch posts');\n  }\n  return response.json();\n};\nexport const getUserInfo = async userId => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch user info');\n  }\n  return response.json();\n};\nexport const getUserPosts = async userId => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/posts`, {\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch user posts');\n  }\n  return response.json();\n};\n\n// ... other existing functions","map":{"version":3,"names":["API_BASE_URL","getPosts","response","fetch","ok","Error","json","getUserInfo","userId","headers","localStorage","getItem","getUserPosts"],"sources":["/home/aniket/Development/Projects/Blog App using React/src/config/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\n\nexport default API_BASE_URL;\n\nexport const getPosts = async () => {\n    const response = await fetch('http://your-api-url/posts');\n    if (!response.ok) {\n      throw new Error('Failed to fetch posts');\n    }\n    return response.json();\n};\n\nexport const getUserInfo = async (userId) => {\n    const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch user info');\n    }\n    return response.json();\n};\n  \nexport const getUserPosts = async (userId) => {\n    const response = await fetch(`${API_BASE_URL}/users/${userId}/posts`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch user posts');\n    }\n    return response.json();\n};\n\n// ... other existing functions"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,eAAeA,YAAY;AAE3B,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC;EACzD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EACzC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,UAAUQ,MAAM,EAAE,EAAE;IAC9DC,OAAO,EAAE;MACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC1D;EACF,CAAC,CAAC;EACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMM,YAAY,GAAG,MAAOJ,MAAM,IAAK;EAC1C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,UAAUQ,MAAM,QAAQ,EAAE;IACpEC,OAAO,EAAE;MACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC1D;EACF,CAAC,CAAC;EACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}