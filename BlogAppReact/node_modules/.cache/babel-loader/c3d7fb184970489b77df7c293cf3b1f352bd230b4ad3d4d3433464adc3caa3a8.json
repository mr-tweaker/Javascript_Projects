{"ast":null,"code":"import API_BASE_URL from '../config/api';\nconst getToken = () => localStorage.getItem('token');\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Something went wrong');\n  }\n  return response.json();\n};\nexport const login = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return handleResponse(response);\n};\nexport const register = async (name, email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    })\n  });\n  return handleResponse(response);\n};\nexport const getPosts = async () => {\n  const response = await fetch(`${API_BASE_URL}/posts`);\n  return handleResponse(response);\n};\nexport const getPost = async id => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`);\n  return handleResponse(response);\n};\nexport const createPost = async postData => {\n  const response = await fetch(`${API_BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(postData)\n  });\n  return handleResponse(response);\n};\nexport const updatePost = async (id, postData) => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(postData)\n  });\n  return handleResponse(response);\n};\nexport const deletePost = async id => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(response);\n};\nexport const getUserProfile = async () => {\n  const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n    headers: {\n      'Authorization': `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(response);\n};","map":{"version":3,"names":["API_BASE_URL","getToken","localStorage","getItem","handleResponse","response","ok","error","json","Error","message","login","email","password","fetch","method","headers","body","JSON","stringify","register","name","getPosts","getPost","id","createPost","postData","updatePost","deletePost","getUserProfile"],"sources":["/home/aniket/Development/Projects/Blog App using React/src/services/api.js"],"sourcesContent":["import API_BASE_URL from '../config/api';\n\nconst getToken = () => localStorage.getItem('token');\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Something went wrong');\n  }\n  return response.json();\n};\n\nexport const login = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  });\n  return handleResponse(response);\n};\n\nexport const register = async (name, email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ name, email, password }),\n  });\n  return handleResponse(response);\n};\n\nexport const getPosts = async () => {\n  const response = await fetch(`${API_BASE_URL}/posts`);\n  return handleResponse(response);\n};\n\nexport const getPost = async (id) => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`);\n  return handleResponse(response);\n};\n\nexport const createPost = async (postData) => {\n  const response = await fetch(`${API_BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(postData),\n  });\n  return handleResponse(response);\n};\n\nexport const updatePost = async (id, postData) => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(postData),\n  });\n  return handleResponse(response);\n};\n\nexport const deletePost = async (id) => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${getToken()}`,\n    },\n  });\n  return handleResponse(response);\n};\n\nexport const getUserProfile = async () => {\n    const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n      headers: {\n        'Authorization': `Bearer ${getToken()}`,\n      },\n    });\n    return handleResponse(response);\n  };    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}