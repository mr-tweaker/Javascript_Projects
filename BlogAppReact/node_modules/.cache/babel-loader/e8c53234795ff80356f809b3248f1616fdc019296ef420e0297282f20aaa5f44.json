{"ast":null,"code":"import API_BASE_URL from '../config/api';\nconst getToken = () => localStorage.getItem('token');\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Something went wrong');\n  }\n  return response.json();\n};\nexport const getPosts = async () => {\n  const response = await fetch(`${API_BASE_URL}/posts`);\n  return handleResponse(response);\n};\nexport const getPost = async id => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`);\n  return handleResponse(response);\n};\nexport const createPost = async postData => {\n  const response = await fetch(`${API_BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(postData)\n  });\n  return handleResponse(response);\n};\nexport const updatePost = async (id, postData) => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(postData)\n  });\n  return handleResponse(response);\n};\nexport const deletePost = async id => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(response);\n};\nexport const getUserProfile = async () => {\n  const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n    headers: {\n      'Authorization': `Bearer ${getToken()}`\n    }\n  });\n  return handleResponse(response);\n};","map":{"version":3,"names":["API_BASE_URL","getToken","localStorage","getItem","handleResponse","response","ok","error","json","Error","message","getPosts","fetch","getPost","id","createPost","postData","method","headers","body","JSON","stringify","updatePost","deletePost","getUserProfile"],"sources":["/home/aniket/Development/Projects/Blog App using React/src/services/api.js"],"sourcesContent":["import API_BASE_URL from '../config/api';\n\nconst getToken = () => localStorage.getItem('token');\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Something went wrong');\n  }\n  return response.json();\n};\n\n\nexport const getPosts = async () => {\n  const response = await fetch(`${API_BASE_URL}/posts`);\n  return handleResponse(response);\n};\n\nexport const getPost = async (id) => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`);\n  return handleResponse(response);\n};\n\nexport const createPost = async (postData) => {\n  const response = await fetch(`${API_BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(postData),\n  });\n  return handleResponse(response);\n};\n\nexport const updatePost = async (id, postData) => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(postData),\n  });\n  return handleResponse(response);\n};\n\nexport const deletePost = async (id) => {\n  const response = await fetch(`${API_BASE_URL}/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${getToken()}`,\n    },\n  });\n  return handleResponse(response);\n};\n\nexport const getUserProfile = async () => {\n    const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n      headers: {\n        'Authorization': `Bearer ${getToken()}`,\n      },\n    });\n    return handleResponse(response);\n  };    "],"mappings":"AAAA,OAAOA,YAAY,MAAM,eAAe;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAEpD,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,sBAAsB,CAAC;EAC1D;EACA,OAAOL,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC;AAGD,OAAO,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMN,QAAQ,GAAG,MAAMO,KAAK,CAAC,GAAGZ,YAAY,QAAQ,CAAC;EACrD,OAAOI,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMQ,OAAO,GAAG,MAAOC,EAAE,IAAK;EACnC,MAAMT,QAAQ,GAAG,MAAMO,KAAK,CAAC,GAAGZ,YAAY,UAAUc,EAAE,EAAE,CAAC;EAC3D,OAAOV,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMX,QAAQ,GAAG,MAAMO,KAAK,CAAC,GAAGZ,YAAY,QAAQ,EAAE;IACpDiB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUjB,QAAQ,CAAC,CAAC;IACvC,CAAC;IACDkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;EAC/B,CAAC,CAAC;EACF,OAAOZ,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAG,MAAAA,CAAOR,EAAE,EAAEE,QAAQ,KAAK;EAChD,MAAMX,QAAQ,GAAG,MAAMO,KAAK,CAAC,GAAGZ,YAAY,UAAUc,EAAE,EAAE,EAAE;IAC1DG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUjB,QAAQ,CAAC,CAAC;IACvC,CAAC;IACDkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;EAC/B,CAAC,CAAC;EACF,OAAOZ,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMkB,UAAU,GAAG,MAAOT,EAAE,IAAK;EACtC,MAAMT,QAAQ,GAAG,MAAMO,KAAK,CAAC,GAAGZ,YAAY,UAAUc,EAAE,EAAE,EAAE;IAC1DG,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACP,eAAe,EAAE,UAAUjB,QAAQ,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;EACF,OAAOG,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMnB,QAAQ,GAAG,MAAMO,KAAK,CAAC,GAAGZ,YAAY,eAAe,EAAE;IAC3DkB,OAAO,EAAE;MACP,eAAe,EAAE,UAAUjB,QAAQ,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;EACF,OAAOG,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}