{"ast":null,"code":"var _jsxFileName = \"/home/aniket/Development/Projects/Blog App using React/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPosts } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const fetchedPosts = await getPosts();\n        setPosts(fetchedPosts);\n      } catch (err) {\n        setError('Failed to fetch posts');\n        console.error(err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/post/${post._id}`,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/create-post\",\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"q/y3GZQxjsT86oPUbeQR6Qlz1Qg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Link","getPosts","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","error","setError","fetchPosts","fetchedPosts","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","to","_id","title","_c","$RefreshReg$"],"sources":["/home/aniket/Development/Projects/Blog App using React/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPosts } from '../services/api';\n\nfunction Home() {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const fetchedPosts = await getPosts();\n        setPosts(fetchedPosts);\n      } catch (err) {\n        setError('Failed to fetch posts');\n        console.error(err);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"home\">\n      <h1>Blog Posts</h1>\n      {posts.length === 0 ? (\n        <p>No posts yet.</p>\n      ) : (\n        <ul>\n          {posts.map(post => (\n            <li key={post._id}>\n              <Link to={`/post/${post._id}`}>{post.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Link to=\"/create-post\">Create New Post</Link>\n    </div>\n  );\n}\n\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAAC,CAAC;QACrCM,QAAQ,CAACI,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAAC,uBAAuB,CAAC;QACjCI,OAAO,CAACL,KAAK,CAACI,GAAG,CAAC;MACpB;IACF,CAAC;IAEDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE,oBAAOL,OAAA;IAAKW,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAEP;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEtD,oBACEhB,OAAA;IAAKW,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBb,KAAK,CAACc,MAAM,KAAK,CAAC,gBACjBjB,OAAA;MAAAY,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEpBhB,OAAA;MAAAY,QAAA,EACGT,KAAK,CAACe,GAAG,CAACC,IAAI,iBACbnB,OAAA;QAAAY,QAAA,eACEZ,OAAA,CAACH,IAAI;UAACuB,EAAE,EAAE,SAASD,IAAI,CAACE,GAAG,EAAG;UAAAT,QAAA,EAAEO,IAAI,CAACG;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD3CG,IAAI,CAACE,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,eACDhB,OAAA,CAACH,IAAI;MAACuB,EAAE,EAAC,cAAc;MAAAR,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACd,EAAA,CArCQD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}