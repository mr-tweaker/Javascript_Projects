{"ast":null,"code":"var _jsxFileName = \"/home/aniket/Development/Projects/Blog App using React/src/components/PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { createPost, updatePost, getPost } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [categories, setCategories] = useState('');\n  const [tags, setTags] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      const fetchPost = async () => {\n        try {\n          const post = await getPost(id);\n          setTitle(post.title);\n          setContent(post.content);\n          setCategories(post.categories.join(', '));\n          setTags(post.tags.join(', '));\n        } catch (err) {\n          setError('Failed to fetch post');\n        }\n      };\n      fetchPost();\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    const postData = {\n      title,\n      content,\n      categories: categories.split(',').map(c => c.trim()),\n      tags: tags.split(',').map(t => t.trim())\n    };\n    try {\n      if (id) {\n        await updatePost(id, postData);\n      } else {\n        await createPost(postData);\n      }\n      navigate('/');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id ? 'Edit Post' : 'Create New Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Categories (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"categories\",\n          value: categories,\n          onChange: e => setCategories(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tags\",\n          children: \"Tags (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"tags\",\n          value: tags,\n          onChange: e => setTags(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: id ? 'Update Post' : 'Create Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"B3S0gBP+/DoCd35K+3gt7oF5T+E=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","createPost","updatePost","getPost","jsxDEV","_jsxDEV","PostForm","_s","title","setTitle","content","setContent","categories","setCategories","tags","setTags","error","setError","navigate","id","fetchPost","post","join","err","handleSubmit","e","preventDefault","postData","split","map","c","trim","t","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/aniket/Development/Projects/Blog App using React/src/components/PostForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { createPost, updatePost, getPost } from '../services/api';\n\nfunction PostForm() {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [categories, setCategories] = useState('');\n  const [tags, setTags] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      const fetchPost = async () => {\n        try {\n          const post = await getPost(id);\n          setTitle(post.title);\n          setContent(post.content);\n          setCategories(post.categories.join(', '));\n          setTags(post.tags.join(', '));\n        } catch (err) {\n          setError('Failed to fetch post');\n        }\n      };\n      fetchPost();\n    }\n  }, [id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    const postData = {\n      title,\n      content,\n      categories: categories.split(',').map(c => c.trim()),\n      tags: tags.split(',').map(t => t.trim()),\n    };\n    try {\n      if (id) {\n        await updatePost(id, postData);\n      } else {\n        await createPost(postData);\n      }\n      navigate('/');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"post-form\">\n      <h2>{id ? 'Edit Post' : 'Create New Post'}</h2>\n      {error && <p className=\"error\">{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"content\">Content:</label>\n          <textarea\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"categories\">Categories (comma-separated):</label>\n          <input\n            type=\"text\"\n            id=\"categories\"\n            value={categories}\n            onChange={(e) => setCategories(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"tags\">Tags (comma-separated):</label>\n          <input\n            type=\"text\"\n            id=\"tags\"\n            value={tags}\n            onChange={(e) => setTags(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">{id ? 'Update Post' : 'Create Post'}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PostForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}